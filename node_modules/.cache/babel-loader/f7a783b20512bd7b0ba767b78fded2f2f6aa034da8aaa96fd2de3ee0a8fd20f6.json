{"ast":null,"code":"var _jsxFileName = \"/Users/jyliu/Development/Wallbox/sudoku/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  _s();\n  let {\n    isInputValid,\n    solveSudoku\n  } = _ref;\n  const [boardState, setBoardState] = useState([[0, 0, 0, 2, 6, 0, 7, 0, 1], [6, 8, 0, 0, 7, 0, 0, 9, 0], [1, 9, 0, 0, 0, 4, 5, 0, 0], [8, 2, 0, 1, 0, 0, 0, 4, 0], [0, 0, 4, 6, 0, 2, 9, 0, 0], [0, 5, 0, 0, 0, 3, 0, 2, 8], [0, 0, 9, 3, 0, 0, 0, 7, 4], [0, 4, 0, 0, 5, 0, 0, 3, 6], [7, 0, 3, 0, 1, 8, 0, 0, 0]]);\n  const handleChange = (event, rowIndex, columnIndex) => {\n    console.log(rowIndex);\n    console.log(columnIndex);\n    const newValue = parseInt(event.target.value);\n    setBoardState(newBoardState);\n    isInputValid(newBoardState, rowIndex, columnIndex, newValue);\n\n    // let solution = solveSudoku(boardState, 0, 0)\n    // console.log(solution)\n    // if (newBoardState === solution) {\n    //   alert(\"Puzzle Solved!\")\n    // }\n  };\n\n  // const solve = () => {\n  //   console.log(boardState)\n  //   solveSudoku(boardState, 0, 0)\n  // }\n\n  const reset = () => {\n    const restart = [[0, 0, 0, 2, 6, 0, 7, 0, 1], [6, 8, 0, 0, 7, 0, 0, 9, 0], [1, 9, 0, 0, 0, 4, 5, 0, 0], [8, 2, 0, 1, 0, 0, 0, 4, 0], [0, 0, 4, 6, 0, 2, 9, 0, 0], [0, 5, 0, 0, 0, 3, 0, 2, 8], [0, 0, 9, 3, 0, 0, 0, 7, 4], [0, 4, 0, 0, 5, 0, 0, 3, 6], [7, 0, 3, 0, 1, 8, 0, 0, 0]];\n    setBoardState(restart);\n  };\n\n  // Render the board\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [boardState.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: row.map((cell, columnIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        value: cell,\n        readOnly: cell !== 0,\n        onChange: e => handleChange(e, rowIndex, columnIndex)\n      }, `${rowIndex}-${columnIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isInputValid,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"YwA9mCFyMFPg4lKCRasObJAc1lY=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Cell","jsxDEV","_jsxDEV","Board","_ref","_s","isInputValid","solveSudoku","boardState","setBoardState","handleChange","event","rowIndex","columnIndex","console","log","newValue","parseInt","target","value","newBoardState","reset","restart","className","children","map","row","cell","readOnly","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jyliu/Development/Wallbox/sudoku/src/components/Board.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Cell from './Cell';\n\nconst Board = ({isInputValid, solveSudoku}) => {\n\n  const [boardState, setBoardState] = useState([\n    [0, 0, 0, 2, 6, 0, 7, 0, 1],\n    [6, 8, 0, 0, 7, 0, 0, 9, 0],\n    [1, 9, 0, 0, 0, 4, 5, 0, 0],\n    [8, 2, 0, 1, 0, 0, 0, 4, 0],\n    [0, 0, 4, 6, 0, 2, 9, 0, 0],\n    [0, 5, 0, 0, 0, 3, 0, 2, 8],\n    [0, 0, 9, 3, 0, 0, 0, 7, 4],\n    [0, 4, 0, 0, 5, 0, 0, 3, 6],\n    [7, 0, 3, 0, 1, 8, 0, 0, 0]\n  ]);\n  \n  \n  const handleChange = (event, rowIndex, columnIndex) => {\n      console.log(rowIndex)\n      console.log(columnIndex)\n      const newValue = parseInt(event.target.value);\n      setBoardState(newBoardState);\n      isInputValid(newBoardState,rowIndex, columnIndex, newValue)\n      \n      // let solution = solveSudoku(boardState, 0, 0)\n      // console.log(solution)\n      // if (newBoardState === solution) {\n      //   alert(\"Puzzle Solved!\")\n      // }\n  }\n\n  // const solve = () => {\n  //   console.log(boardState)\n  //   solveSudoku(boardState, 0, 0)\n  // }\n\n  const reset = () => {\n    const restart = [\n      [0, 0, 0, 2, 6, 0, 7, 0, 1],\n      [6, 8, 0, 0, 7, 0, 0, 9, 0],\n      [1, 9, 0, 0, 0, 4, 5, 0, 0],\n      [8, 2, 0, 1, 0, 0, 0, 4, 0],\n      [0, 0, 4, 6, 0, 2, 9, 0, 0],\n      [0, 5, 0, 0, 0, 3, 0, 2, 8],\n      [0, 0, 9, 3, 0, 0, 0, 7, 4],\n      [0, 4, 0, 0, 5, 0, 0, 3, 6],\n      [7, 0, 3, 0, 1, 8, 0, 0, 0]\n    ]\n    setBoardState(restart)\n  }\n  \n  // Render the board\n  return (\n    \n    <div className=\"board\">\n      {boardState.map((row, rowIndex) => (\n        \n        <div className=\"board-row\" key={rowIndex}>\n          {row.map((cell, columnIndex) => (\n            <Cell\n              key={`${rowIndex}-${columnIndex}`}\n              value={cell}\n              readOnly={cell !== 0}\n              onChange={(e) => handleChange(e, rowIndex, columnIndex)}\n            />\n          ))}\n        </div>\n        \n      ))}\n      {/* <button onClick={solve}>\n                Solve\n      </button> */}\n      \n      <button onClick={isInputValid}>\n                Check\n      </button>\n      \n      <button onClick={reset}>\n                Reset\n      </button>\n    </div>\n  );\n};\n\nexport default Board;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAACC,YAAY;IAAEC;EAAW,CAAC,GAAAH,IAAA;EAExC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAC3C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B,CAAC;EAGF,MAAMW,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IACnDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IACxB,MAAMG,QAAQ,GAAGC,QAAQ,CAACN,KAAK,CAACO,MAAM,CAACC,KAAK,CAAC;IAC7CV,aAAa,CAACW,aAAa,CAAC;IAC5Bd,YAAY,CAACc,aAAa,EAACR,QAAQ,EAAEC,WAAW,EAAEG,QAAQ,CAAC;;IAE3D;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAEA,MAAMK,KAAK,GAAGA,CAAA,KAAM;IAClB,MAAMC,OAAO,GAAG,CACd,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;IACDb,aAAa,CAACa,OAAO,CAAC;EACxB,CAAC;;EAED;EACA,oBAEEpB,OAAA;IAAKqB,SAAS,EAAC,OAAO;IAAAC,QAAA,GACnBhB,UAAU,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEd,QAAQ,kBAE5BV,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBE,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,EAAEd,WAAW,kBACzBX,OAAA,CAACF,IAAI;QAEHmB,KAAK,EAAEQ,IAAK;QACZC,QAAQ,EAAED,IAAI,KAAK,CAAE;QACrBE,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAElB,QAAQ,EAAEC,WAAW;MAAE,GAHlD,GAAED,QAAS,IAAGC,WAAY,EAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKpC;IAAC,GAR4BtB,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAWzC,CAAC,eAKFhC,OAAA;MAAQiC,OAAO,EAAE7B,YAAa;MAAAkB,QAAA,EAAC;IAE/B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAEThC,OAAA;MAAQiC,OAAO,EAAEd,KAAM;MAAAG,QAAA,EAAC;IAExB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAAC7B,EAAA,CAhFIF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAkFX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}