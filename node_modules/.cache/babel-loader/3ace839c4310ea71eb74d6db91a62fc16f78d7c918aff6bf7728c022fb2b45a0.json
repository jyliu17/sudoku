{"ast":null,"code":"var _jsxFileName = \"/Users/jyliu/Development/Wallbox/sudoku/src/components/App.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport Cell from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // Check if a row is valid\n  const isRowValid = (board, row, value) => {\n    for (let i = 1; i < 9; i++) {\n      if (board[row - 1][i] === value) {\n        alert(\"contains duplicate number\");\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Check if a column is valid\n  const isColumnValid = (board, column, value) => {\n    for (let i = 0; i < 9; i++) {\n      if (board[i][column - 1] === value) {\n        alert(\"contains duplicate number\");\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Check if a sub-box is valid\n  const isSubBoxValid = (board, row, column, value) => {\n    let startRow = row - row % 3;\n    let startCol = column - column % 3;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (board[i + startRow][j + startCol] === value) {\n          alert(\"contains duplicate number\");\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  // Check if the user input adheres to the rules of Sudoku\n  const isInputValid = (board, row, column, value) => {\n    return isRowValid(board, row, value) && isColumnValid(board, column, value) && isSubBoxValid(board, row, column, value);\n  };\n\n  //solving sudoku using algorith\n  const solveSudoku = (board, row, column) => {\n    if (row === 9 - 1 && column === 9) return board;\n    if (column === 9) {\n      row++;\n      column = 0;\n    }\n    if (board[row][column] !== 0) return solveSudoku(board, row, column + 1);\n    for (let num = 1; num < 10; num++) {\n      if (isSafe(board, row, column, num)) {\n        board[row][column] = num;\n        if (solveSudoku(board, row, column + 1)) return board;\n      }\n      board[row][column] = 0;\n    }\n    return false;\n  };\n  const isSafe = (board, row, column, num) => {\n    for (let x = 0; x <= 8; x++) {\n      if (board[row][x] === num) return false;\n    }\n    for (let x = 0; x <= 8; x++) {\n      if (board[x][column] === num) return false;\n    }\n    let startRow = row - row % 3;\n    let startCol = column - column % 3;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (board[i + startRow][j + startCol] === num) return false;\n      }\n    }\n    return board;\n  };\n  const isRed = () => {\n    alert(\"this item is not red\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sudoku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      isRed: isRed,\n      isRowValid: isRowValid,\n      isColumnValid: isColumnValid,\n      isSubBoxValid: isSubBoxValid,\n      isInputValid: isInputValid,\n      solveSudoku: solveSudoku,\n      isSafe: isSafe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Board","Cell","jsxDEV","_jsxDEV","App","isRowValid","board","row","value","i","alert","isColumnValid","column","isSubBoxValid","startRow","startCol","j","isInputValid","solveSudoku","num","isSafe","x","isRed","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jyliu/Development/Wallbox/sudoku/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport Board from \"./Board\";\nimport Cell from \"./Cell\";\n\n\nconst App = () => {\n\n    // Check if a row is valid\n    const isRowValid = (board, row, value) => {\n        for (let i = 1; i < 9; i++) {\n            if (board[row - 1][i] === value) {\n                alert(\"contains duplicate number\")\n                return false;\n            }\n        }\n        return true;\n    };\n  \n    // Check if a column is valid\n    const isColumnValid = (board, column, value) => {\n        for (let i = 0; i < 9; i++) {\n            if (board[i][column - 1] === value) {\n                alert(\"contains duplicate number\")\n                return false;\n            }\n        }\n        return true;\n    };\n  \n    // Check if a sub-box is valid\n    const isSubBoxValid = (board, row, column, value) => {\n        let startRow = row - (row % 3);\n        let startCol = column - (column % 3);\n  \n        for (let i = 0; i <  3; i++) {\n            for (let j = 0; j < 3; j++) {\n                if (board[i + startRow][j + startCol] === value) {\n                    alert(\"contains duplicate number\")\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n  \n    // Check if the user input adheres to the rules of Sudoku\n    const isInputValid = (board, row, column, value) => {\n        return isRowValid(board, row, value) && \n               isColumnValid(board, column, value) && \n               isSubBoxValid(board, row, column, value);\n    };\n\n    //solving sudoku using algorith\n    const solveSudoku = (board, row, column) => {\n        if (row === 9 - 1 && column === 9) return board;\n        if (column === 9) {\n            row++;\n            column = 0;\n        }\n        if (board[row][column] !== 0) return solveSudoku(board, row, column+1);\n\n        for (let num = 1; num < 10; num++) {\n            if (isSafe(board, row, column, num)) {\n                board[row][column] = num;\n                if (solveSudoku(board, row, column + 1)) return board;\n            }\n            board[row][column] = 0;\n        }\n        return false;\n    }\n\n    const isSafe = (board, row, column, num) => {\n        for (let x = 0; x <= 8; x++) {\n            if (board[row][x] === num) return false;\n        }\n        for (let x = 0; x <= 8; x++) {\n            if (board[x][column] === num) return false;\n        }\n        let startRow = row - (row % 3);\n        let startCol = column - (column % 3);\n\n        for (let i = 0; i < 3; i++) {\n            for (let j = 0; j < 3; j++) {\n                if (board[i + startRow][j + startCol] === num) return false;\n            }\n        }\n        return board;\n    }\n    const isRed = () => {\n        alert(\"this item is not red\")\n    }\n    return (\n        \n        <main>\n            <div className=\"App\">\n                <h1>Sudoku</h1>\n             </div>\n            <Board isRed={isRed}\n                   isRowValid={isRowValid}\n                   isColumnValid={isColumnValid}\n                   isSubBoxValid={isSubBoxValid}\n                   isInputValid={isInputValid}\n                   solveSudoku={solveSudoku}\n                   isSafe={isSafe}>\n            </Board>\n        </main>\n        \n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}