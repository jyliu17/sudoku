{"ast":null,"code":"var _jsxFileName = \"/Users/jyliu/Development/Wallbox/sudoku/src/components/App.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport Cell from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // Check if a row is valid\n  const isRowValid = (board, row, value) => {\n    for (let i = 0; i < 9; i++) {\n      if (board[row][i] === value) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Check if a column is valid\n  const isColumnValid = (board, column, value) => {\n    for (let i = 0; i < 9; i++) {\n      if (board[i][column] === value) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Check if a sub-box is valid\n  const isSubBoxValid = (board, row, column, value) => {\n    const subBoxRow = Math.floor(row / 3) * 3;\n    const subBoxColumn = Math.floor(column / 3) * 3;\n    for (let i = subBoxRow; i < subBoxRow + 3; i++) {\n      for (let j = subBoxColumn; j < subBoxColumn + 3; j++) {\n        if (board[i][j] === value) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  // Check if the user input adheres to the rules of Sudoku\n  const isInputValid = (board, row, column, value) => {\n    return isRowValid(board, row, value) && isColumnValid(board, column, value) && isSubBoxValid(board, row, column, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sudoku\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      children: /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Board","Cell","jsxDEV","_jsxDEV","App","isRowValid","board","row","value","i","isColumnValid","column","isSubBoxValid","subBoxRow","Math","floor","subBoxColumn","j","isInputValid","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jyliu/Development/Wallbox/sudoku/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport Board from \"./Board\";\nimport Cell from \"./Cell\";\n\n\nfunction App() {\n\n    // Check if a row is valid\n    const isRowValid = (board, row, value) => {\n        for (let i = 0; i < 9; i++) {\n            if (board[row][i] === value) {\n            return false;\n            }\n        }\n        return true;\n    };\n  \n    // Check if a column is valid\n    const isColumnValid = (board, column, value) => {\n        for (let i = 0; i < 9; i++) {\n        if (board[i][column] === value) {\n            return false;\n        }\n        }\n        return true;\n    };\n  \n    // Check if a sub-box is valid\n    const isSubBoxValid = (board, row, column, value) => {\n        const subBoxRow = Math.floor(row / 3) * 3;\n        const subBoxColumn = Math.floor(column / 3) * 3;\n  \n        for (let i = subBoxRow; i < subBoxRow + 3; i++) {\n            for (let j = subBoxColumn; j < subBoxColumn + 3; j++) {\n                if (board[i][j] === value) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n  \n    // Check if the user input adheres to the rules of Sudoku\n    const isInputValid = (board, row, column, value) => {\n        return isRowValid(board, row, value) && \n               isColumnValid(board, column, value) && isSubBoxValid(board, row, column, value);\n    };\n\n    return (\n        \n        <main>\n            <div className=\"App\">\n                <h1>Sudoku</h1>\n             </div>\n            <Board>\n                <Cell></Cell>\n            </Board>\n\n            <button>\n                Check\n            </button>\n        </main>\n        \n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}